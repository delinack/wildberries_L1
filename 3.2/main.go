package main

import (
	"fmt"
	"sync"
)

func main() {
	wg := sync.WaitGroup{} // создаем ссылку на wait group
	num := [5]int{2, 4, 6, 8, 10}
	s := 0
	for i := range num {
		wg.Add(1) // добавляем воркер, кладем горутину в wait-группу, счетчик - 1
		go func(n int) {
			s += n * n // записываем квадрат числа в переменную, которая находится вне тела функции
			wg.Done()  // уменьшаем счетчик на 1
		}(num[i])
	}
	wg.Wait() // ожидаем, пока счетчик не станет 0
	fmt.Println(s)
}

/*
	Здесь я использовала структуру WaitGroup() из пакета sync.
	В данной реализации вместо channel использовала замыкание,
	чтобы для накопления результата обращаться к переменной вне тела функции.
*/

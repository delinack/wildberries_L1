/*
	Дана последовательность чисел: 2,4,6,8,10.
	Найти сумму их квадратов(22+32+42....) с
	использованием конкурентных вычислений.
*/

package main

import (
	"fmt"
	"sync"
)

func pow(n int, c chan int, wg *sync.WaitGroup) {
	defer wg.Done() // отложенный вызов функции, уменьшающий счетчик на 1 (выполнится при выходе из функции)
	c <- n * n      // передаём значение в канал
}

func main() {
	wg := &sync.WaitGroup{} // создаем ссылку на wait group
	num := [5]int{2, 4, 6, 8, 10}
	c := make(chan int) // создаём канал
	res := 0
	for i := range num {
		wg.Add(1)             // добавляем воркер, кладем горутину в wait-группу, счетчик - 1
		go pow(num[i], c, wg) // запуск самой горутины
		res += <-c            // вычитываем значение из канала, суммируем в res
	}
	wg.Wait() // ожидаем, пока счетчик не станет 0
	fmt.Println(res)
}

/*
	Здесь я использовала структуру WaitGroup() из пакета sync.
	Для суммирования использовала channel.
*/

/*
Реализовать все возможные способы остановки выполнения горутины.
*/

package main

import (
	"fmt"
	"time"
)

func main() {
	quit := make(chan struct{}) // канал типа пустой структуры, используемый только для остановки горутины
	go func() {
		for {
			select {
			case <-quit: // слушаем сигнал остановки на канале
				return
			default:
				fmt.Println("Working...") // задаем дефолтное выполнение
			}
		}
	}()
	time.Sleep(200 * time.Microsecond) // время работы горутины до закрытия канала
	close(quit)                        // закрытие канала, выполнение case <-quit и завершение работы горутины
}

/*
	Мультиплексирование каналов с помощью select
	Горутина завершает работу, когда срабатывает case <-quit

	Завершение работы с помощью закрытия канала
*/

/*
Написать программу, которая конкурентно рассчитает значение
квадратов чисел взятых из массива (2,4,6,8,10) и выведет их
квадраты в stdout.
*/

package main

import (
	"fmt"
	"sync"
)

func pow(n int, wg *sync.WaitGroup) {
	defer wg.Done() // отложенный вызов функции, уменьшающий счетчик на 1 (выполнится при выходе из функции)
	fmt.Println(n * n)
}

func main() {
	wg := &sync.WaitGroup{} // создаем ссылку на wait group
	num := [5]int{2, 4, 6, 8, 10}
	for i := range num {
		wg.Add(1)          // добавляем воркер, кладем горутину в wait-группу, счетчик - 1
		go pow(num[i], wg) // запуск самой горутины
	}
	wg.Wait() // ожидаем, пока счетчик не станет 0
}

/*
	В предыдущей реализации для демонстрации я использовала функцию
	fmt.Scanln(), но она не подходит для применения в реальной работе.
	Здесь я использовала структуру WaitGroup() из пакета sync,
	позволяющую дождаться завершения работы горутин и только
	после этого завершить работу программы.
*/

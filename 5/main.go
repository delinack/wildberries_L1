/*
Разработать программу, которая будет последовательно отправлять
значения в канал, а с другой стороны канала — читать. По истечению
N секунд программа должна завершаться.
*/

package main

import (
	"fmt"
	"time"
)

func main() {
	ch := make(chan int)

	go func() {
		for i := 1; ; i++ {
			ch <- i                 // отправляем значение в канал
			time.Sleep(time.Second) // задержка перед отправкой следующего значения размером в секунду
		}
	}()

	N := 5
	timeout := time.After(time.Duration(N) * time.Second) // задаем таймаут, через пять минут происходит чтение в канал
	for {
		select { // селект для мультиплексирования каналов, при case timeout выход из цикла
		case i := <-ch: // читаем из канала и печатаем значение
			fmt.Printf("Секунд прошло: %d\n", i)
		case <-timeout:
			fmt.Println("Таймаут!")
			return
		}
	}
}
